#ifndef __COMMON_H__
#define __COMMON_H__

#include<ros/ros.h>

#define aux_declare_param(type,name) extern const type &name; 
#define aux_declare_param_filename(type,name) aux_declare_param(type,name)
#define aux_declare_param_degree2rad(type,name) aux_declare_param(type,name)
#define aux_declare_param_filename_prefix(type,name) aux_declare_param(type,name)

namespace PARAM{

    int load_params(const ros::NodeHandle &nh);
    aux_declare_param(double,     ros_rate_cruise)
    aux_declare_param(double,     ros_rate_decision)
    aux_declare_param(double,     ros_rate_path)
    aux_declare_param(double,     ros_rate_tracking)
    aux_declare_param(double,     map_memory_step_x)
    aux_declare_param(double,     map_memory_step_y)
    aux_declare_param(double,     map_memory_org_x)
    aux_declare_param(double,     map_memory_org_y)
    aux_declare_param(int,        cruise_circular_sample_count)
    aux_declare_param(double,     cruise_velocity)
    aux_declare_param(double,     cruise_height)
    aux_declare_param(double,     interaction_height)
    aux_declare_param(int,        m)
    aux_declare_param(int,        n)
    aux_declare_param(double,     const_tf)
    aux_declare_param(double,     arena_size)
    aux_declare_param(int,        list_capacity)
    aux_declare_param(int,        taskslist_capacity)
    aux_declare_param(double,     velocity_obs)
    aux_declare_param(double,     velocity_tgt)
    aux_declare_param(double,     velocity_mav_max)
    aux_declare_param(int,        tree_search_max_depth)
    aux_declare_param(double,     tree_search_gama)
    aux_declare_param(double,     tree_search_gama_theta)
    aux_declare_param(double,     tree_search_gama_distance)
    aux_declare_param(double,     tree_search_gama_inner)
    aux_declare_param(int,        tree_search_max_target_counts)
    aux_declare_param(double,     ramda_t)
    aux_declare_param(double,     ramda_t_S)
    aux_declare_param(double,     ramda_t_E)
    aux_declare_param(double,     ramda_t_A)
    aux_declare_param(double,     ramda_t_SAE)
    aux_declare_param(double,     ramda_t_y)
    aux_declare_param(double,     ramda_t_theta)
    aux_declare_param(double,     ramda_m)
    aux_declare_param(double,     ramda_m_dis)
    aux_declare_param(double,     ramda_m_i_op)
    aux_declare_param(double,     ramda_o)
    aux_declare_param(double,     ramda_o_s)
    aux_declare_param(double,     ramda_o_a)
    aux_declare_param(double,     ramda_cruise)
    aux_declare_param(double,     radius_neary)
    aux_declare_param(double,     radius_collision)
    aux_declare_param(double,     radius_safe)
    aux_declare_param(double,     radius_lidar)
    aux_declare_param(int,        period_turn_ms)
    aux_declare_param(int,        time_turn_180_ms)
    aux_declare_param(int,        time_turn_45_ms)
    aux_declare_param(int,        time_cruise_det_ms)
    aux_declare_param(int,        time_turn_distinguish_ms)
    aux_declare_param(int,        obstacle_time_forget_ms)
    aux_declare_param(int,        target_time_forget_ms)
    aux_declare_param(int,        edge_num_direction)
    aux_declare_param(double,     edge_velocity_static)
    aux_declare_param(double,     edge_time_one_edge)
    aux_declare_param(double,     edge_nosolution_jump)
    aux_declare_param(double,     edge_coef_angle)
    aux_declare_param(double,     edge_bazier_rate)
    aux_declare_param(double,     angle_field_rad)
    aux_declare_param(double,     edge_angle_limited)
    aux_declare_param(double,     edge_angle_de)
    aux_declare_param(int,        loop_id)
    aux_declare_param(int,        time_offset_ms)
    aux_declare_param(double,     rand_tgt_average)
    aux_declare_param(double,     rand_tgt_gauss)
    aux_declare_param(double,     rand_tgt_gauss_variance)
    aux_declare_param(double,     rand_obs_average)
    aux_declare_param(double,     rand_obs_gauss)
    aux_declare_param(double,     rand_obs_gauss_variance)

    aux_declare_param(std::string, str_arena_frame)
    aux_declare_param(std::string, file_name_prefix)
    aux_declare_param(std::string, loop_param_k)    
    aux_declare_param(std::string, loop_id_str)

    aux_declare_param_filename(std::string, file_name_lqr_plist)
    aux_declare_param_filename(std::string, file_name_tracking)
    aux_declare_param_filename(std::string, file_name_controller)
    aux_declare_param_filename(std::string, file_name_path)
    aux_declare_param_filename(std::string, file_name_path_env)
    aux_declare_param_filename(std::string, file_name_task)
    aux_declare_param_filename(std::string, file_name_task_env)
    aux_declare_param_filename(std::string, file_name_map)
    aux_declare_param_filename(std::string, file_name_bazier_in)
    aux_declare_param_filename(std::string, file_name_bazier_out)
    aux_declare_param_filename(std::string, file_name_edgemap)
    aux_declare_param_filename(std::string, file_name_edgepath)
    aux_declare_param_filename(std::string, file_name_timecost)
    aux_declare_param_filename(std::string, file_name_ast_cruise)
    aux_declare_param_filename(std::string, file_name_ast_path)
    aux_declare_param_filename(std::string, file_name_ast_tracking)
    aux_declare_param_filename(std::string, file_name_arena_info)
    aux_declare_param_filename(std::string, file_name_arena_cmd_received)
    aux_declare_param_filename(std::string, file_name_arena_cmd_sent)
    aux_declare_param_filename(std::string, file_name_health)

};

#endif
